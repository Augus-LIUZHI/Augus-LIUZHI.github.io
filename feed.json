{"title":"LiuZhi'Blog","description":"my blog","language":"en","link":"https://augus-liuzhi.github.io","pubDate":"Sat, 21 Sep 2019 11:45:32 GMT","lastBuildDate":"Sun, 22 Sep 2019 05:16:53 GMT","generator":"hexo-generator-json-feed","webMaster":"LiuZhi","items":[{"title":"Java算法题","link":"https://augus-liuzhi.github.io/2019/09/21/Java算法题/","description":"题目11234567891011121314151617181920/* 数列： 2/1 3/2 5/3 8/5 13/8 21/13………… * 思路： 斐波那契数列（黄金分割数列），从第三项开始，前两项之和等于下一项 * 本题：分母+分子=下一项分子 分子=下一项分母 */public class Fibonacci_number &#123; public static void main(String[] args) &#123; int numerator = 2; // 定义初始分子; int denominator = 1; // 定义初始分母； int n = 0, sum; // 定义n控制 n项 sum为当前第n项值 float sums = 0f; // sums为前n项和 while (n &lt; 20) &#123; sum = (numerator / denominator); numerator = (denominator + numerator); denominator = numerator; sums += sum; n++; &#125; System.out.println(\"前20项数列之和为：\" + sums); &#125;&#125; 题目212345678910111213141516/* 完数（又名完美数）一个数等于除它本身之外的因子之和，就是完数 * 题目：求1000以内的完数 */public class Perfect_number &#123; public static void main(String[] args) &#123; for (int i = 1; i &lt; 1000; i++) &#123;// 遍历1000以内的数 int sum = 0;// 定义因子之和 for (int j = 1; j &lt; i; j++) &#123;// j是因子，j&lt;i则j不包含本身i if (i % j == 0) sum = sum + j;// 因子累加 &#125; if (sum == i)// 判断完数 System.out.println(i); &#125; &#125;&#125; 题目3123456789101112131415161718192021222324252627/* 题目：将一个正整数分解质因数 如90=2*3*3*5 * 程序分析（1）对n进行分解质数，找一个最小质数k，如果n==k,则结束 * （2）当n&gt;k时，如果n能被k整除，则k是一个质因数，输出，并将这个n/k这个正整数进行质因数分解， * 把n/k赋值给n，继续执行第一步 * （3） 如果不能被整除，继续进行k+1判断能否被整除 */import java.util.Scanner;public class Prime &#123; public static void main(String[] args) &#123; Scanner read=new Scanner(System.in); System.out.println(\"请输入要分解的正整数：\"); int n = read.nextInt();//获取输入的数字n System.out.print(n + \"=\"); for (int k = 2; k &lt;= n; k++) &#123; while (n != k) &#123;//判断n是否等于k if (n % k == 0) &#123;//能整除就是因数，输出 System.out.print(k + \"*\");//输出，*控制格式 n = n / k; &#125; else &#123; //不能被整除就跳出while break; &#125; &#125; &#125; System.out.println(n); &#125;&#125; 题目412345678910111213141516171819202122/* 题目：用条件运算符嵌套完成此题：学习成绩&gt;90 用A表示 * 60-89之间用B表示 小于60用C表示 */import java.util.Scanner;public class IfElse &#123; public static void main(String[] args) &#123; Scanner read = new Scanner(System.in); System.out.println(\"请输入-成绩：\"); int a = read.nextInt(); if (a &gt;= 90) &#123; System.out.println(\"成绩：A\"); &#125; else &#123; if (a &gt;= 60 &amp;&amp; a &lt; 90) &#123; System.out.println(\"成绩：B\"); &#125; else &#123; if (a &lt; 60) &#123; System.out.println(\"成绩：C\"); &#125; &#125; &#125; &#125;&#125; 题目512345678910111213141516171819202122232425262728/* 求最小公倍数算法：两个整数相乘除以最大公约数 * 求最大公约数：辗转相除法：a%b=c 只要c不为0 a=b * b=c继续除，知道c=0,输出此时的被除数，就是最大公约数 */import java.util.Scanner;public class Gcd &#123; public static void main(String[] args) &#123; Scanner read=new Scanner(System.in); System.out.println(\"请输入第一个数：\"); int a=read.nextInt();//定义接收第一个数 int d=a;//d用于求小公倍数 System.out.println(\"请输入第二个数：\"); int b=read.nextInt();//定义接收第二个数 int e=b;//e用于求小公倍数 int c=a%b;//求余判断最大公约数 int f=b;//如果第一次就被整除，则直接接收b while(c!=0) &#123;//辗转相除 a=b; b=c; c=a%b; f=b; &#125; System.out.println(\"最大公约数是：\"+f); System.out.println(\"最小公倍数是：\"+((d*e)/f)); &#125;&#125; 题目612345678910111213141516171819202122232425262728/* 题目： * 数字1-4能组成多少个不重复且互不相同的数字 * 思路：定义三个1-4的数组，然后用三个循环嵌套，进行遍历 * 输出，如果出现相同的或者重复的进行判断筛选 */public class SanWeiShu &#123; public static void main(String[] args) &#123; int a[]= &#123;1,2,3,4&#125;; int b[]= &#123;1,2,3,4&#125;; int c[]= &#123;1,2,3,4&#125;; int count=0; for(int i:a) &#123;//三层循环可以控制出现不重复的 for(int j:b) &#123; for(int t:c) &#123; if(i==j||j==t||i==t) &#123;//判断不要相同的 continue; &#125; else &#123; count++; System.out.print(i+\" \"+j+\" \"+t); System.out.println(); &#125; &#125; &#125; &#125; System.out.println(\"不重复的数字有\"+count+\"个\"); &#125;&#125; 题目7123456789101112131415161718192021222324252627/* 题目：输入一个数，求它是几位数，并且逆序输出 * 思路： * 先将int转为String * 然后根据String的长度建立一个空int[] * 再用一个循环，分别赋String中对应位char转为int的值给每一个int[]中元素 * 然后循环遍历逆序输出数组 */import java.util.Scanner;public class Reverse &#123; public static void main(String[] args) &#123; Scanner read = new Scanner(System.in); System.out.println(\"请输入一个不多于五位数的整数：\"); int a = read.nextInt();//键盘接收一个数字 String str = String.valueOf(a);//将int变成string System.out.println(\"你输入的是：\" + str); int arr[] = new int[str.length()]; System.out.println(\"数字的位数是：\" + str.length() + \"位\");//string的长度就是数字的位数 for (int i = 0; i &lt; str.length(); i++) &#123; char ch = str.charAt(i); arr[i] = Integer.parseInt(str.charAt(i) + \"\");//将字符串转换成一个整数，赋值给数组 &#125; System.out.print(\"数字的逆序输出是：\"); for (int i = arr.length - 1; i &gt;= 0; i--) &#123;//逆序输出 System.out.print(arr[i] + \" \"); &#125; &#125;&#125; 题目812345678910111213141516171819202122232425/* 题目：判断一个五位数是不是回文 * 思路：数字转字符串，字符串转字符，字符转数组 * 判断第一位和最后一位是否相等，判断第二位和倒数第二位是否相等 */import java.util.Scanner;public class Palindrome &#123; public static void main(String[] args) &#123; Scanner read = new Scanner(System.in); System.out.println(\"请输入一个五位数的整数：\"); int a = read.nextInt();//键盘接收一个数字 String str = String.valueOf(a);//将int变成string System.out.print(\"你输入的是：\" + str+\" \"); int arr[] = new int[str.length()]; for (int i = 0; i &lt; str.length(); i++) &#123; char ch = str.charAt(i); arr[i] = Integer.parseInt(str.charAt(i) + \"\");//将字符串转换成一个整数，赋值给数组 &#125; if((arr[0]==arr[4])&amp;&amp;(arr[1]==arr[3])) &#123;//判断 System.out.print(\"是回文\"); &#125; else &#123; System.out.print(\"不是回文\"); &#125; &#125;&#125; 题目91234567891011121314151617/* 题目：求一个3*3矩阵对角元素之和 * 思路：二维数组来写3*3矩阵 */public class Matrix &#123; public static void main(String[] args) &#123; int a[][]= &#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;,&#123;7,8,9&#125;&#125;; int sum=0; for(int i=0;i&lt;a.length;i++) &#123; for(int j=0;j&lt;a.length;j++) &#123; if(i==j||(j==a.length-i-1)) &#123;//判断对角元素 sum+=a[i][j];//对角元素的累加 &#125; &#125; &#125; System.out.println(\"对角线之和：\"+sum); &#125;&#125; 题目10(一)12345678910111213141516171819202122232425262728293031323334353637/* 题目： N个人人围成一圈，从1-3报数，凡是报到3的就会剔除，问最后剩下的是几号？ * 思路：将N个人改成布尔类型，然后通过for循环，给每个人赋值给true，再用一个计数器 * t，凡是累加到3（相当于报数到3）然后就将此时的a[i]赋值给false,知道最后剩下只有一个数的时候 * 那么这个数的下标值加1就是所求 */import java.util.Scanner;public class Josephus &#123; public static void main(String[] args) &#123; Scanner read=new Scanner(System.in); System.out.println(\"请输入人数：\"); int n = read.nextInt();//键盘接收人数的个数 boolean a[] = new boolean[n];//将人数赋值给布尔类型 for (int i = 0; i &lt; a.length; i++) &#123; a[i] = true;//将每个人赋值给true &#125; int t = 0; int len = a.length; while (len &gt;1) &#123;//当只剩下一个true时就跳出循环 for (int i = 0; i &lt; a.length; i++) &#123; if (a[i]) &#123; t++;//累加器，判断报数到3 if (t == 3) &#123;//报数到3时就赋值给false t = 0; a[i] = false; len--; &#125; &#125; &#125; &#125; for (int i = 0; i &lt; a.length; i++) &#123; if (a[i]) &#123; System.out.println(i+1);//再次循环遍历，输出剩下的一个true &#125; &#125; &#125;&#125; 题目10(二)12345678910public class yuese &#123; public static void main(String[] args) &#123; System.out.println(cycle(10,3)); &#125; public static int cycle(int people, int num) &#123; int i, r = 0; for (i = 2; i &lt;= people; i++) r = (r + num) % i; return r + 1; &#125;&#125; 题目1112345678910111213141516171819202122/* 题目：求1-50之间的素数 * 思路：两个函数 * 主函数控制数字范围 * prime函数判断素数 */public class isprime &#123; public static void main(String[] args) &#123; for(int i=2;i&lt;=50;i++) &#123;//控制数字范围 if(prime(i)) &#123;//调用prime System.out.println(i+\"是素数\"); &#125; &#125; &#125; static boolean prime(int x) &#123; for(int i=2;i&lt;=Math.sqrt(x);i++) &#123;//（1）在一般领域，对正整数n，如果用2到 之间的所有整数去除，均无法整除，则n为质数。 if(x%i==0) &#123;//能被其他数整除，就不是素数 return false; //（2）质数大于等于2 不能被它本身和1以外的数整除 &#125; &#125; return true; &#125;&#125; 题目12123456789101112131415/* 题目：小球反弹。每次弹起高度是下降的1/2 * 用循环给h赋值，求出循环第十次的高度 * 用sum做高度累加 */public class Free &#123; public static void main(String[] args) &#123; double h=100,sum=0; for(int i=1;i&lt;=10;i++) &#123; sum+=h;//累加经过路程 h=h/2;//将上一次高度赋值给新高度 &#125; System.out.println(\"经过\"+sum+\"米\"+\" \"+\"第十次反弹\"+h); &#125;&#125;","pubDate":"Sat, 21 Sep 2019 11:45:32 GMT","guid":"https://augus-liuzhi.github.io/2019/09/21/Java算法题/","category":"-java算法"},{"title":"Hello World","link":"https://augus-liuzhi.github.io/2019/09/20/hello-world/","description":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","pubDate":"Fri, 20 Sep 2019 15:24:22 GMT","guid":"https://augus-liuzhi.github.io/2019/09/20/hello-world/","category":""},{"title":"java自动生成四则运算+源码","link":"https://augus-liuzhi.github.io/2019/09/20/markdown-2 /","description":"1.需求分析： 为了对学生的算数进行锻炼，家长每天给孩子出题成为一个难题，需要做出一个程序，每天生成一定数量且不重复的题目，分解家长们的压力。 2. 功能设计: 2.1 基本功能： 自动生成10道100以内的2个操作数的四则运算算式== （+ - * /）==，要求运算结果也在100以内——&gt;实现 剔除重复算式。 2 + 3 = 和 2 + 3 = 是重复算式 2 + 3 = 和 3 + 2 = 不属于重复算式——&gt;实现 题目数量可定制——&gt;实现 相关参数可控——&gt;实现 是否包含乘法和除法 操作数数值范围可控（如操作数 在100以内 还是1000以内） 操作数是否含负数 生成的运算题存储到外部文件result.txt中——-&gt;实现 2.2 拓展功能： 1. 自动生成答案 2. 添加学号，并为每个学号生成不同的试题 3. 设计实现： 使用构造函数PrintStream Scanner ，PrintStream ps = new PrintStream(&quot;d:/result.txt&quot;); System.setOut(ps);调用此函数，可以将所有System.out.println();输出语句，打印到i我们创建的文件夹中 Scanner t=new Scanner(System.in); 控制我们从键盘输入 Math.random();产生随机不重复函数，我做了以下测试 12345678910111213141516171819202122&gt; 1 /*&gt; 2 * 验证random会不会产生相同的随机数&gt; 3 * 做个10万次循环看看，发现结果为0&gt; 4 *java不像c,c会大概率产生相同的随机数，甚至会下次运行可能会和上次&gt; 5 * 产生的随机数是一样的，因此用C写得初始化一个时间种子，才能尽可能的保证随机数不相同&gt; 6 *java的random函数10万次运行都很难出现一次相同的随机数，所有random不产生重复函数&gt; 7 */&gt; 8 public class text_002&#123;&gt; 9 public static void main(String args[])&#123;&gt; 10 int count = 0;&gt; 11 double first = 0;&gt; 12 double second = 0; &gt; 13 for(int i=0; i&lt;99999; i++)&#123;&gt; 14 first = Math.random();&gt; 15 second = Math.random();&gt; 16 if (first == second)&gt; 17 count ++;&gt; 18 &#125;&gt; 19 System.out.print(count);&gt; 20 &#125;&gt; 21 &#125;&gt; 4. 测试运行： 5. 代码解释第一个操作数的选择123456789101112131415//第一个操作数的选择 2 int a=(int)(Math.random()*tf+1); 3 4 if(zf==1) &#123;//有负数 5 int p=(int) (Math.random()*2); 6 switch(p) &#123; 7 case 0:a=a*(-1);//取负数 8 System.out.print(a);break; 9 case 1:10 System.out.print(a);break;11 &#125;12 &#125;13 if(zf==0) &#123;//没有负数14 System.out.print(a);15 &#125; 运算符号的选择12345678910111213141516171819 1 System.out.println(\"请选择是否包含*或者/：2:否 4:是 \"); 2 int fu=t.nextInt(); 3 if(fu==2) &#123;//选择两个字符‘+’‘-’ 4 int k=(int)(Math.random()*2); 5 switch(k) &#123;//随机选择运算符 6 case 0:System.out.print(\"+\"); 7 break; 8 case 1:System.out.print(\"-\"); 9 break; 10 &#125;11 if(fu==4) &#123;//四个字符的‘+’‘-’‘*’‘/’12 int k=(int)(Math.random()*4+1);13 switch(k) &#123;//随机选择运算符14 case 1:System.out.print(\"+\");break;15 case 2:System.out.print(\"-\");break;16 case 3:System.out.print(\"*\");break;17 case 4:System.out.print(\"/\");break;18 &#125; 等号右侧结果 1234567891011121314151617 1 //等号 2 3 System.out.print(\"=\"); 4 //运算结果 5 if(k==1) &#123; 6 c=a+b;System.out.println(c); 7 &#125; 8 if(k==2) &#123; 9 c=a-b;System.out.println(c);10 &#125;11 if(k==3) &#123;12 c=a*b;System.out.println(c);13 &#125;14 if(k==4) &#123;15 c=a/b;System.out.println(c);16 &#125; 6. 总结 7. psp 源码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113import java.io.FileNotFoundException;import java.io.InputStream;import java.io.PrintStream;import java.util.Scanner;public class text_005 &#123; public static void main(String[] args) throws FileNotFoundException &#123; PrintStream ps = new PrintStream(\"d:/result.txt\"); int c; Scanner t=new Scanner(System.in); System.out.print(\"请输入题目个数：\"); int tg=t.nextInt(); //控制题目个数 System.out.print(\"请输入操作数的范围（如 100，1000等）:\"); int tf=t.nextInt(); //控制题目范围 System.out.println(\"请选择是否有负数：1:有 0:没有\"); int zf=t.nextInt(); //控制正负数 System.out.println(\"请选择是否包含*或者/：2:否 4:是 \"); int fu=t.nextInt(); //控制符号 System.setOut(ps); //添加打印学号 //for(int j=0;j&lt;2;j++) &#123; //System.out.println(2019000+j); for(int i=0;i&lt;tg;i++) &#123;//循环控制题目个数 //第一个操作数的选择 int a=(int)(Math.random()*tf+1); if(zf==1) &#123;//有负数 int p=(int) (Math.random()*2); switch(p) &#123; case 0:a=a*(-1);//取负数 System.out.print(a);break; case 1: System.out.print(a);break; &#125; &#125; if(zf==0) &#123;//没有负数 System.out.print(a); &#125; if(fu==2) &#123;//选择两个字符‘+’‘-’ int k=(int)(Math.random()*2); switch(k) &#123;//随机选择运算符 case 0:System.out.print(\"+\"); break; case 1:System.out.print(\"-\"); break; &#125; int b=(int)(Math.random()*tf+1); if(zf==1) &#123;//有负数 int p=(int) (Math.random()*2); switch(p) &#123; case 0:b=b*(-1);//取负数 System.out.print(b);break; case 1: System.out.print(b);break; &#125; &#125; if(zf==0) &#123;//没有负数 System.out.print(b); &#125; System.out.println(\"=\"); /* //运算结果 if(k==0) &#123;c=a+b;System.out.println(c);&#125; if(k==1)&#123;c=a-b; System.out.println(c);&#125; */ &#125; if(fu==4) &#123;//四个字符的‘+’‘-’‘*’‘/’ int k=(int)(Math.random()*4+1); switch(k) &#123;//随机选择运算符 case 1:System.out.print(\"+\");break; case 2:System.out.print(\"-\");break; case 3:System.out.print(\"*\");break; case 4:System.out.print(\"/\");break; &#125; //第二个操作数的选择 int b=(int) (Math.random()*tf+1); if(zf==1) &#123;//有负数 int p=(int) (Math.random()*2); switch(p) &#123; case 0:b=b*(-1);//取负数 System.out.print(b);break; case 1: System.out.print(b);break; &#125; &#125; if(zf==0) &#123;//没有负数 System.out.print(b); &#125; //等号 System.out.println(\"=\"); /* //运算结果 if(k==1) &#123; c=a+b;System.out.println(c); &#125; if(k==2) &#123; c=a-b;System.out.println(c); &#125; if(k==3) &#123; c=a*b;System.out.println(c); &#125; if(k==4) &#123; c=a/b;System.out.println(c); &#125;*/ &#125; &#125; //学号那个循环的截止&#125;&#125;&#125;","pubDate":"Fri, 20 Sep 2019 15:01:42 GMT","guid":"https://augus-liuzhi.github.io/2019/09/20/markdown-2 /","category":"-java算法 -四则运算"},{"title":"2019软件工程第一次作业","link":"https://augus-liuzhi.github.io/2019/09/20/markdown-1/","description":"1.计算机专业术语及名词解释 软件=程序+软件工程 程序=数据结构+算法 程序：源程序，一行行代码 软件构建 1. cc和link命令 2. 软件架构：一系列抽象模式，指导大型软件各个方面的设计 3. 软件设计与实现 4. 各种文件和数据之间描述文件依赖，编译，链接 软件质量 1. 源代码管理（配置管理）：配置运行的操作系统及程序版本等 2. 质量保证：保证高质量软件、流程进行开发 3. 软件测试：验证的过程 软件开发 1. 需求分析：对用户的需求【靠谱、可实现】 2. 设计：软件架构 3. 实现：写数据和算法 4. 测试：软件测试 5. 发布: 发布软件 软件生命周期 1. 程序理解：懂已有程序，了解程序设计 2. 软件维护（服务运营）：打补丁，维护服务，修复问题 3. 软件项目管理：生命周期负责人 用户体验：使用者的体验 国际化和本地化：处理不同语言，不同地区用户对界面和功能的需求 商业模式 职业道德规范 软件企业=软件+商业模式 程序开发的不同阶段 1. 写程序练习数据结构由与算法 2. 用JAVAScript ASP.NET Ruby写写网站 3. 钻研新技术，应用新技术在软件行业创新 4. 银行软件系统，互联网搜索行业，电子商务系，windows操作系统 软件开发特性（难题） 1. 复杂性 2. 不可见行性 3. 易变形 4. 服从性 5. 非连续性 ​ 计算机科学偏理论领域 1. 计算理论 2. 信息和编码理论 3. 算法和数据结构 4. 形式化方法 5. 程序设计语言 计算机科学偏实践领域 1. 计算机体系结构 2. 并行计算和分布式系统 3. 实时系统和嵌入式系统 4. 操作系统 5. 计算机网路 6. 科学计算机 7. 安全和密码学 8. 人工智能 9. 计算机图形学 10. 数据库和大规模数据处理 11. 万维网 12. 自然语言处理和语音 13. 人机交互 14. 软件工程 生命周期（软件需求、软件设计、软件构建、软件测试、软件维护） 专门领域 （软件配置管理、软件工程管理、软件工程过程、软件工程模型和方法、软件质量） 理论基础（计算基础、数学基础、工程基础） 软件缺陷 bug 足够好的软件 1. 用户满意度 2. 可靠性 3. 软件流程的质量 4. 可维护性 2.构建之法五个问题 1 p15 ，足够好的软件中，如果一个项目在规定时间之内，无法完成或者bug很多，应该怎么解决，谁来承担后果，会有怎样的后果？ 2 P42， 对于个人能力的衡量和发展，企业如何衡量一个人的能力，个人发展又怎样的晋升制度？*3 P130 关于成员授权和信任问题。如果有能力干活的人中途离开了或者在开发过程中这个人遇到技术难题，长时间未解决，其他成员对这个人产生能力质疑时，如何解决这个问题？由谁来主导这个问题的解决？ 4 P136， 对于投资质量这一节中，如何保证企业所投资的这个软件是一个好软件【盈利的软件】，从用户需求者角度想，另外还有其他的哪些方面？ 5 P184 ，关于竞争对手的产品，如何使我们制作的软件产品，比竞争对手的产品更好的发展？如何让更多的用户选择我们的产品？如何让我们的产品更有竞争力 3.软件分类及特点 Games： 王者荣耀、和平精英 Shopping：淘宝、京东、拼多多、1688、咸鱼 Pay:支付宝、云闪付、微信、京东金融 Learning：慕课网、墨墨背单词、可可英语、网易公开课、中国大学mooc 短视频：抖音、西瓜视频、今日头条、飞猪 点餐：美团、美团外卖、饿了么、口碑、KFC 特点： 1. 像饿了么，美团新用户立减15或者20，可以几分钱吃一顿饭所以下载了，都是盈利软件，对商家进行抽成，不仅赚取用户现金，和其他企业进行广告推广盈利等。2. 通过应用商店进行下载，当时大一，使用起来感觉非常符合我们3. 去年因为服务器bug,饿了么对于当时那个时段无法登陆的用户进行了10元无门槛对用户补偿，强制更新，没有取消键，进入页面，只有更新页面。4. 竞争通过对用户的新注册账号的福利，普通用户还有会员进行推广。 ​","pubDate":"Fri, 20 Sep 2019 15:01:42 GMT","guid":"https://augus-liuzhi.github.io/2019/09/20/markdown-1/","category":"-构建之法"},{"title":"如何用Markdown写flow流程图","link":"https://augus-liuzhi.github.io/2019/09/20/markdown-3/","description":"Flow流程图工具：Typora 1. 流程图各个框框代表的含义1.1 开始和结束 1.2 输入输出 1.3 判断和处理 2. 模块关键字 start 程序开始 end 程序结束 opreation 程序处理块 subroutine 子程序块 condition 条件判断 inputoutput 表示程序的输入输出 right 、left 表示箭头在当前模块的起点（默认向下,多默认和右） yes 、no 表示condition判断分支 3. 模块用法 模块标识=&gt;模块关键字：内容 模块标识任意起名，最好知名解意，起一个标识的作用 内容就是框框里的文字 注意：模块关键字和内容之间有一个冒号，并且要在冒号后，必须要有一个空格 4. 模块连接方法 用-&gt;来连接,符号两侧不用空格 5. 应用实例 5.1 开始和结束模块12345代码：flowchatst=&gt;start: 开始e=&gt;end: 结束st-&gt;e 5.2 开始和程序处理块（下）1234代码start=&gt;start: 开始operation=&gt;operation: int i=1start-&gt;operation 5.3 开始和程序处理块（右）1234代码start=&gt;start: 开始operation=&gt;operation: int i=1start(right)-&gt;operation 5.4 操作和判断12345678代码con=&gt;condition: for(int i=1;i&lt;n;i++)op1=&gt;operation: int n=10;op2=&gt;operation: a++;op3=&gt;operation: a--;op1-&gt;concon(yes)-&gt;op2con(no)-&gt;op3 5.5 完整流程112345678910代码st=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 操作sub=&gt;subroutine: 子程序cond=&gt;condition: 判断io=&gt;inputoutput: 输出st(right)-&gt;op-&gt;condcond(yes)-&gt;io(right)-&gt;econd(no)-&gt;sub(right)-&gt;op 5.6 完整流程2123456789代码st=&gt;start: 开始e=&gt;end: 结束op=&gt;end: 操作cond=&gt;condition: 判断st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 注意：如果使用Typora,选中代码，然后再选择语言哪里，直接输入flow即可，如果用其他编辑器，应当输入相应的语法flow` ,如csdn。博客园的markdown不支持、不支持、不支持流程图。st=>start: 开始 e=>end: 结束 st->e{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);in01=>inputoutput: 输入 out01=>inputoutput: 输出 in01(right)->out01{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-1-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-1-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-1\", options);con02=>condition: 判断 op02=>operation: 操作 op02->con02{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-2-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-2-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-2\", options);st=>start: 开始 e=>end: 结束 st->e{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-3-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-3-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-3\", options);start=>start: 开始 operation=>operation: int i=1 start->operation{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-4-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-4-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-4\", options);start=>start: 开始 operation=>operation: int i=1 start(right)->operation{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-5-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-5-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-5\", options);con=>condition: for(int i=1;ioperation: int n=10; op2=>operation: a++; op3=>operation: a--; op1->con con(yes)->op2 con(no)->op3{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-6-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-6-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-6\", options);st=>start: 开始 e=>end: 结束 op=>operation: 操作 sub=>subroutine: 子程序 cond=>condition: 判断 io=>inputoutput: 输出 st(right)->op->cond cond(yes)->io(right)->e cond(no)->sub(right)->op{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-7-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-7-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-7\", options);st=>start: 开始 e=>end: 结束 op=>end: 操作 cond=>condition: 判断 st->op->cond cond(yes)->e cond(no)->op{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-8-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-8-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-8\", options);","pubDate":"Fri, 20 Sep 2019 15:01:42 GMT","guid":"https://augus-liuzhi.github.io/2019/09/20/markdown-3/","category":"-markdown -流程图"}]}