<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LiuZhi&#39;Blog</title>
  
  <subtitle>人生苦短</subtitle>
  <link href="/Augus-LIUZHI.github.io/atom.xml" rel="self"/>
  
  <link href="https://augus-liuzhi.github.io/"/>
  <updated>2019-09-22T07:00:56.049Z</updated>
  <id>https://augus-liuzhi.github.io/</id>
  
  <author>
    <name>LiuZhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ospf的配置</title>
    <link href="https://augus-liuzhi.github.io/2019/09/22/markdown-4/"/>
    <id>https://augus-liuzhi.github.io/2019/09/22/markdown-4/</id>
    <published>2019-09-22T06:51:38.658Z</published>
    <updated>2019-09-22T07:00:56.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h3><p><img src="https://img-blog.csdn.net/20180202202509942?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVmljdG9yeUtpbmdMSVU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="hihi"></p><h5 id="R1"><a href="#R1" class="headerlink" title="R1"></a>R1</h5><blockquote><p><huawei>system-view<br>[Huawei]int g0/0/1<br>[Huawei-GigabitEthernet0/0/1]ip add 10.1.12.1 24<br>[Huawei-GigabitEthernet0/0/1]q<br>[Huawei]int LoopBack 0<br>[Huawei-LoopBack0]ip add 1.1.1.1<br>[Huawei-LoopBack0]q<br>[Huawei]ospf 1 router-id 1.1.1.1<br>[Huawei-ospf-1]area 0<br>[Huawei-ospf-1-area-0.0.0.0]network 10.1.12.0 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.0]network 1.1.1.1 0.0.0.0</huawei></p></blockquote><h5 id="R2"><a href="#R2" class="headerlink" title="R2"></a>R2</h5><blockquote><p><huawei>system-view<br>[Huawei]int g0/0/0<br>[Huawei-GigabitEthernet0/0/0]ip add 10.1.12.2 24<br>[Huawei-GigabitEthernet0/0/0]int g0/0/1<br>[Huawei-GigabitEthernet0/0/1]ip add 10.1.23.1 24<br>[Huawei-GigabitEthernet0/0/1]q<br>[Huawei]int LoopBack 0<br>[Huawei-LoopBack0]ip add 2.2.2.2 32<br>[Huawei-LoopBack0]q<br>[Huawei]ospf 1 router-id 2.2.2.2<br>[Huawei-ospf-1]area 0<br>[Huawei-ospf-1-area-0.0.0.0]network 10.1.12.0 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.0]q<br>[Huawei-ospf-1]area 1<br>[Huawei-ospf-1-area-0.0.0.1]network 10.1.23.0 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.1]network 2.2.2.2 0.0.0.0<br>[Huawei-ospf-1-area-0.0.0.1]vlink-peer 3.3.3.3</huawei></p></blockquote><h5 id="R3"><a href="#R3" class="headerlink" title="R3"></a>R3</h5><blockquote><p><huawei>system-view<br>[Huawei]int g0/0/0<br>[Huawei-GigabitEthernet0/0/0]ip add 10.1.23.2 24<br>[Huawei-GigabitEthernet0/0/0]int g0/0/1<br>[Huawei-GigabitEthernet0/0/1]ip add 10.1.34.1 24<br>[Huawei-GigabitEthernet0/0/1]q<br>[Huawei]int LoopBack 0<br>[Huawei-LoopBack0]ip add 3.3.3.3 32<br>[Huawei]ospf 1 router-id 3.3.3.3<br>[Huawei-ospf-1]area 1<br>[Huawei-ospf-1-area-0.0.0.1]network 10.1.23.0 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.1]network 3.3.3.3 0.0.0.0<br>[Huawei-ospf-1-area-0.0.0.1]q<br>[Huawei-ospf-1]area 2<br>[Huawei-ospf-1-area-0.0.0.2]network 10.1.34.0 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.2]q<br>[Huawei-ospf-1]area 1<br>[Huawei-ospf-1-area-0.0.0.1]vlink-peer 2.2.2.2</huawei></p></blockquote><h5 id="R4"><a href="#R4" class="headerlink" title="R4"></a>R4</h5><blockquote><p><huawei>system-view<br>[Huawei]int g0/0/1<br>[Huawei-GigabitEthernet0/0/1]ip add 10.1.34.2 24<br>[Huawei-GigabitEthernet0/0/1]q<br>[Huawei]int LoopBack 0<br>[Huawei-LoopBack0]ip add 4.4.4.4 32<br>[Huawei]ospf 1 router-id 4.4.4.4<br>[Huawei-ospf-1]area 2<br>[Huawei-ospf-1-area-0.0.0.2]network 10.1.34.2 0.0.0.255<br>[Huawei-ospf-1-area-0.0.0.2]network 4.4.4.4 0.0.0.0</huawei></p></blockquote><h5 id="验证："><a href="#验证：" class="headerlink" title="验证："></a>验证：</h5><h6 id="R1-ping-R2"><a href="#R1-ping-R2" class="headerlink" title="R1  ping  R2"></a>R1  ping  R2</h6><p><img src="https://img-blog.csdn.net/20180202205827537?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVmljdG9yeUtpbmdMSVU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ho"></p><h6 id="查看路由表"><a href="#查看路由表" class="headerlink" title="查看路由表"></a>查看路由表</h6><p><img src="https://img-blog.csdn.net/20180202205942329?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvVmljdG9yeUtpbmdMSVU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="hlo"></p><blockquote><p>如需引入外部路由在边缘路由执行：</p><p>[Huawei-ospf-1]default-route-advertise always （路由的注入）</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;拓扑结构&quot;&gt;&lt;a href=&quot;#拓扑结构&quot; class=&quot;headerlink&quot; title=&quot;拓扑结构&quot;&gt;&lt;/a&gt;拓扑结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180202202509942?watermar
      
    
    </summary>
    
    
      <category term="-ospf" scheme="https://augus-liuzhi.github.io/tags/ospf/"/>
    
  </entry>
  
  <entry>
    <title>Java算法题</title>
    <link href="https://augus-liuzhi.github.io/2019/09/21/Java%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    <id>https://augus-liuzhi.github.io/2019/09/21/Java算法题/</id>
    <published>2019-09-21T11:45:32.546Z</published>
    <updated>2019-09-22T05:04:57.475Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.shields.io/badge/java-%E7%AE%97%E6%B3%95-green" alt="java"></p><h3 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 数列：  2/1 3/2 5/3 8/5 13/8 21/13…………</span></span><br><span class="line"><span class="comment"> * 思路：  斐波那契数列（黄金分割数列），从第三项开始，前两项之和等于下一项</span></span><br><span class="line"><span class="comment"> * 本题：分母+分子=下一项分子 分子=下一项分母</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fibonacci_number</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> numerator = <span class="number">2</span>; <span class="comment">// 定义初始分子;</span></span><br><span class="line"><span class="keyword">int</span> denominator = <span class="number">1</span>; <span class="comment">// 定义初始分母；</span></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>, sum; <span class="comment">// 定义n控制 n项 sum为当前第n项值</span></span><br><span class="line"><span class="keyword">float</span> sums = <span class="number">0f</span>; <span class="comment">// sums为前n项和</span></span><br><span class="line"><span class="keyword">while</span> (n &lt; <span class="number">20</span>) &#123;</span><br><span class="line">sum = (numerator / denominator);</span><br><span class="line">numerator = (denominator + numerator);</span><br><span class="line">denominator = numerator;</span><br><span class="line">sums += sum;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"前20项数列之和为："</span> + sums);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 完数（又名完美数）一个数等于除它本身之外的因子之和，就是完数</span></span><br><span class="line"><span class="comment"> * 题目：求1000以内的完数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Perfect_number</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1000</span>; i++) &#123;<span class="comment">// 遍历1000以内的数</span></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">// 定义因子之和</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;<span class="comment">// j是因子，j&lt;i则j不包含本身i</span></span><br><span class="line"><span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">sum = sum + j;<span class="comment">// 因子累加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum == i)<span class="comment">// 判断完数</span></span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：将一个正整数分解质因数 如90=2*3*3*5</span></span><br><span class="line"><span class="comment"> * 程序分析（1）对n进行分解质数，找一个最小质数k，如果n==k,则结束</span></span><br><span class="line"><span class="comment"> *     （2）当n&gt;k时，如果n能被k整除，则k是一个质因数，输出，并将这个n/k这个正整数进行质因数分解，</span></span><br><span class="line"><span class="comment"> *    把n/k赋值给n，继续执行第一步</span></span><br><span class="line"><span class="comment"> *     （3） 如果不能被整除，继续进行k+1判断能否被整除</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Prime</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入要分解的正整数："</span>);</span><br><span class="line"><span class="keyword">int</span> n = read.nextInt();<span class="comment">//获取输入的数字n</span></span><br><span class="line">System.out.print(n + <span class="string">"="</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">2</span>; k &lt;= n; k++) &#123;</span><br><span class="line"><span class="keyword">while</span> (n != k) &#123;<span class="comment">//判断n是否等于k</span></span><br><span class="line"><span class="keyword">if</span> (n % k == <span class="number">0</span>) &#123;<span class="comment">//能整除就是因数，输出</span></span><br><span class="line">System.out.print(k + <span class="string">"*"</span>);<span class="comment">//输出，*控制格式</span></span><br><span class="line">n = n / k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//不能被整除就跳出while</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目4"><a href="#题目4" class="headerlink" title="题目4"></a>题目4</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：用条件运算符嵌套完成此题：学习成绩&gt;90 用A表示</span></span><br><span class="line"><span class="comment"> *      60-89之间用B表示 小于60用C表示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfElse</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入-成绩："</span>);</span><br><span class="line"><span class="keyword">int</span> a = read.nextInt();</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成绩：A"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">60</span> &amp;&amp; a &lt; <span class="number">90</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成绩：B"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">60</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成绩：C"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*求最小公倍数算法：两个整数相乘除以最大公约数</span></span><br><span class="line"><span class="comment">  *     求最大公约数：辗转相除法：a%b=c 只要c不为0 a=b</span></span><br><span class="line"><span class="comment"> *  b=c继续除，知道c=0,输出此时的被除数，就是最大公约数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gcd</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入第一个数："</span>);</span><br><span class="line"><span class="keyword">int</span> a=read.nextInt();<span class="comment">//定义接收第一个数</span></span><br><span class="line"><span class="keyword">int</span> d=a;<span class="comment">//d用于求小公倍数</span></span><br><span class="line">System.out.println(<span class="string">"请输入第二个数："</span>);</span><br><span class="line"><span class="keyword">int</span> b=read.nextInt();<span class="comment">//定义接收第二个数</span></span><br><span class="line"><span class="keyword">int</span> e=b;<span class="comment">//e用于求小公倍数</span></span><br><span class="line"><span class="keyword">int</span> c=a%b;<span class="comment">//求余判断最大公约数</span></span><br><span class="line"><span class="keyword">int</span> f=b;<span class="comment">//如果第一次就被整除，则直接接收b</span></span><br><span class="line"><span class="keyword">while</span>(c!=<span class="number">0</span>) &#123;<span class="comment">//辗转相除</span></span><br><span class="line">a=b;</span><br><span class="line">b=c;</span><br><span class="line">c=a%b;</span><br><span class="line">f=b;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"最大公约数是："</span>+f);</span><br><span class="line">System.out.println(<span class="string">"最小公倍数是："</span>+((d*e)/f));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目6"><a href="#题目6" class="headerlink" title="题目6"></a>题目6</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*题目：</span></span><br><span class="line"><span class="comment"> * 数字1-4能组成多少个不重复且互不相同的数字</span></span><br><span class="line"><span class="comment"> * 思路：定义三个1-4的数组，然后用三个循环嵌套，进行遍历</span></span><br><span class="line"><span class="comment"> * 输出，如果出现相同的或者重复的进行判断筛选</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SanWeiShu</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[]= &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> b[]= &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> c[]= &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i:a) &#123;<span class="comment">//三层循环可以控制出现不重复的</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j:b) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t:c) &#123;</span><br><span class="line"><span class="keyword">if</span>(i==j||j==t||i==t) &#123;<span class="comment">//判断不要相同的</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">count++;</span><br><span class="line">System.out.print(i+<span class="string">" "</span>+j+<span class="string">" "</span>+t);</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"不重复的数字有"</span>+count+<span class="string">"个"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目7"><a href="#题目7" class="headerlink" title="题目7"></a>题目7</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：输入一个数，求它是几位数，并且逆序输出</span></span><br><span class="line"><span class="comment">  *   思路：</span></span><br><span class="line"><span class="comment">  *   先将int转为String</span></span><br><span class="line"><span class="comment">  *   然后根据String的长度建立一个空int[]</span></span><br><span class="line"><span class="comment">  *   再用一个循环，分别赋String中对应位char转为int的值给每一个int[]中元素  </span></span><br><span class="line"><span class="comment"> * 然后循环遍历逆序输出数组  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reverse</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一个不多于五位数的整数："</span>);</span><br><span class="line"><span class="keyword">int</span> a = read.nextInt();<span class="comment">//键盘接收一个数字</span></span><br><span class="line">String str = String.valueOf(a);<span class="comment">//将int变成string</span></span><br><span class="line">System.out.println(<span class="string">"你输入的是："</span> + str);</span><br><span class="line"><span class="keyword">int</span> arr[] = <span class="keyword">new</span> <span class="keyword">int</span>[str.length()];</span><br><span class="line">System.out.println(<span class="string">"数字的位数是："</span> + str.length() + <span class="string">"位"</span>);<span class="comment">//string的长度就是数字的位数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = str.charAt(i);</span><br><span class="line">arr[i] = Integer.parseInt(str.charAt(i) + <span class="string">""</span>);<span class="comment">//将字符串转换成一个整数，赋值给数组</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"数字的逆序输出是："</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;<span class="comment">//逆序输出</span></span><br><span class="line">System.out.print(arr[i] + <span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：判断一个五位数是不是回文</span></span><br><span class="line"><span class="comment"> * 思路：数字转字符串，字符串转字符，字符转数组</span></span><br><span class="line"><span class="comment"> * 判断第一位和最后一位是否相等，判断第二位和倒数第二位是否相等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Palindrome</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一个五位数的整数："</span>);</span><br><span class="line"><span class="keyword">int</span> a = read.nextInt();<span class="comment">//键盘接收一个数字</span></span><br><span class="line">String str = String.valueOf(a);<span class="comment">//将int变成string</span></span><br><span class="line">System.out.print(<span class="string">"你输入的是："</span> + str+<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">int</span> arr[] = <span class="keyword">new</span> <span class="keyword">int</span>[str.length()];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = str.charAt(i);</span><br><span class="line">arr[i] = Integer.parseInt(str.charAt(i) + <span class="string">""</span>);<span class="comment">//将字符串转换成一个整数，赋值给数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((arr[<span class="number">0</span>]==arr[<span class="number">4</span>])&amp;&amp;(arr[<span class="number">1</span>]==arr[<span class="number">3</span>])) &#123;<span class="comment">//判断</span></span><br><span class="line">System.out.print(<span class="string">"是回文"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">System.out.print(<span class="string">"不是回文"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目9"><a href="#题目9" class="headerlink" title="题目9"></a>题目9</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：求一个3*3矩阵对角元素之和</span></span><br><span class="line"><span class="comment"> * 思路：二维数组来写3*3矩阵</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Matrix</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[][]= &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;,&#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a.length;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i==j||(j==a.length-i-<span class="number">1</span>)) &#123;<span class="comment">//判断对角元素</span></span><br><span class="line">sum+=a[i][j];<span class="comment">//对角元素的累加</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"对角线之和："</span>+sum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目10-一"><a href="#题目10-一" class="headerlink" title="题目10(一)"></a>题目10(一)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目： N个人人围成一圈，从1-3报数，凡是报到3的就会剔除，问最后剩下的是几号？</span></span><br><span class="line"><span class="comment"> * 思路：将N个人改成布尔类型，然后通过for循环，给每个人赋值给true，再用一个计数器</span></span><br><span class="line"><span class="comment"> * t，凡是累加到3（相当于报数到3）然后就将此时的a[i]赋值给false,知道最后剩下只有一个数的时候</span></span><br><span class="line"><span class="comment"> * 那么这个数的下标值加1就是所求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Josephus</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner read=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入人数："</span>);</span><br><span class="line"><span class="keyword">int</span> n = read.nextInt();<span class="comment">//键盘接收人数的个数</span></span><br><span class="line"><span class="keyword">boolean</span> a[] = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];<span class="comment">//将人数赋值给布尔类型</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">a[i] = <span class="keyword">true</span>;<span class="comment">//将每个人赋值给true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len = a.length;</span><br><span class="line"><span class="keyword">while</span> (len &gt;<span class="number">1</span>) &#123;<span class="comment">//当只剩下一个true时就跳出循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i]) &#123;</span><br><span class="line">t++;<span class="comment">//累加器，判断报数到3</span></span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">3</span>) &#123;<span class="comment">//报数到3时就赋值给false</span></span><br><span class="line">t = <span class="number">0</span>;</span><br><span class="line">a[i] = <span class="keyword">false</span>;</span><br><span class="line">len--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i]) &#123;</span><br><span class="line">System.out.println(i+<span class="number">1</span>);<span class="comment">//再次循环遍历，输出剩下的一个true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目10-二"><a href="#题目10-二" class="headerlink" title="题目10(二)"></a>题目10(二)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">yuese</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(cycle(<span class="number">10</span>,<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cycle</span><span class="params">(<span class="keyword">int</span> people, <span class="keyword">int</span> num)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i, r = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= people; i++) r = (r + num) % i;</span><br><span class="line">    <span class="keyword">return</span> r + <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目11"><a href="#题目11" class="headerlink" title="题目11"></a>题目11</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：求1-50之间的素数</span></span><br><span class="line"><span class="comment"> * 思路：两个函数</span></span><br><span class="line"><span class="comment"> * 主函数控制数字范围</span></span><br><span class="line"><span class="comment"> * prime函数判断素数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">isprime</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">50</span>;i++) &#123;<span class="comment">//控制数字范围</span></span><br><span class="line"><span class="keyword">if</span>(prime(i)) &#123;<span class="comment">//调用prime</span></span><br><span class="line">System.out.println(i+<span class="string">"是素数"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=Math.sqrt(x);i++) &#123;<span class="comment">//（1）在一般领域，对正整数n，如果用2到  之间的所有整数去除，均无法整除，则n为质数。</span></span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>) &#123;<span class="comment">//能被其他数整除，就不是素数 </span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;             <span class="comment">//（2）质数大于等于2 不能被它本身和1以外的数整除</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目12"><a href="#题目12" class="headerlink" title="题目12"></a>题目12</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 题目：小球反弹。每次弹起高度是下降的1/2</span></span><br><span class="line"><span class="comment"> * 用循环给h赋值，求出循环第十次的高度</span></span><br><span class="line"><span class="comment"> * 用sum做高度累加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Free</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> h=<span class="number">100</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</span><br><span class="line">sum+=h;<span class="comment">//累加经过路程</span></span><br><span class="line">h=h/<span class="number">2</span>;<span class="comment">//将上一次高度赋值给新高度</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"经过"</span>+sum+<span class="string">"米"</span>+<span class="string">" "</span>+<span class="string">"第十次反弹"</span>+h);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/java-%E7%AE%97%E6%B3%95-green&quot; alt=&quot;java&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;题目1&quot;&gt;&lt;a href=&quot;#题目1&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="-java算法" scheme="https://augus-liuzhi.github.io/tags/java%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://augus-liuzhi.github.io/2019/09/20/hello-world/"/>
    <id>https://augus-liuzhi.github.io/2019/09/20/hello-world/</id>
    <published>2019-09-20T15:24:22.137Z</published>
    <updated>2019-09-20T15:24:22.137Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java自动生成四则运算+源码</title>
    <link href="https://augus-liuzhi.github.io/2019/09/20/markdown-2%20/"/>
    <id>https://augus-liuzhi.github.io/2019/09/20/markdown-2 /</id>
    <published>2019-09-20T15:01:42.882Z</published>
    <updated>2019-09-22T05:10:17.721Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-需求分析："><a href="#1-需求分析：" class="headerlink" title="1.需求分析："></a>1.需求分析：</h3><hr><p>为了对学生的算数进行锻炼，家长每天给孩子出题成为一个难题，需要做出一个程序，每天生成一定数量且不重复的题目，分解家长们的压力。</p><h3 id="2-功能设计"><a href="#2-功能设计" class="headerlink" title="2. 功能设计:"></a>2. 功能设计:</h3><hr><h5 id="2-1-基本功能："><a href="#2-1-基本功能：" class="headerlink" title="2.1 基本功能："></a>2.1 基本功能：</h5><ul><li>自动生成10道100以内的2个操作数的四则运算算式== （+ - *  /）==，要求运算结果也在100以内——&gt;实现</li></ul><ul><li>剔除重复算式。  2 + 3 =    和  2 + 3 =     是重复算式      2 + 3 =   和   3 + 2 =  不属于重复算式——&gt;实现</li></ul><ul><li>题目数量可定制——&gt;实现</li></ul><ul><li>相关参数可控——&gt;实现<ol><li>是否包含乘法和除法</li><li>操作数数值范围可控（如操作数 在100以内   还是1000以内）</li><li>操作数是否含负数　　 </li></ol></li></ul><ul><li>生成的运算题存储到外部文件<code>result.txt</code>中——-&gt;实现</li></ul><h5 id="2-2-拓展功能："><a href="#2-2-拓展功能：" class="headerlink" title="2.2 拓展功能："></a>2.2 拓展功能：</h5><p>　　　　　　　　1. 自动生成答案</p><p>　　　　　　　　2. 添加学号，并为每个学号生成不同的试题　　　　　　　　</p><h3 id="3-设计实现："><a href="#3-设计实现：" class="headerlink" title="3. 设计实现："></a>3. 设计实现：</h3><hr><ul><li>使用构造函数<code>PrintStream Scanner</code>  ，<code>PrintStream ps = new PrintStream(&quot;d:/result.txt&quot;);</code></li></ul><ul><li><code>System.setOut(ps);</code>调用此函数，可以将所有<code>System.out.println();</code>输出语句，打印到i我们创建的文件夹中</li></ul><ul><li><code>Scanner t=new Scanner(System.in);</code> 控制我们从键盘输入</li></ul><ul><li><code>Math.random();</code>产生随机不重复函数，我做了以下测试</li></ul><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span> <span class="comment">/*</span></span><br><span class="line"><span class="comment">&gt; 2  * 验证random会不会产生相同的随机数</span></span><br><span class="line"><span class="comment">&gt; 3  * 做个10万次循环看看，发现结果为0</span></span><br><span class="line"><span class="comment">&gt; 4  *java不像c,c会大概率产生相同的随机数，甚至会下次运行可能会和上次</span></span><br><span class="line"><span class="comment">&gt; 5  * 产生的随机数是一样的，因此用C写得初始化一个时间种子，才能尽可能的保证随机数不相同</span></span><br><span class="line"><span class="comment">&gt; 6  *java的random函数10万次运行都很难出现一次相同的随机数，所有random不产生重复函数</span></span><br><span class="line"><span class="comment">&gt; 7  */</span></span><br><span class="line">&gt; <span class="number">8</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">text_002</span></span>&#123;</span><br><span class="line">&gt; <span class="number">9</span> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">&gt; <span class="number">10</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">&gt; <span class="number">11</span> <span class="keyword">double</span> first = <span class="number">0</span>;</span><br><span class="line">&gt; <span class="number">12</span> <span class="keyword">double</span> second = <span class="number">0</span>; </span><br><span class="line">&gt; <span class="number">13</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">99999</span>; i++)&#123;</span><br><span class="line">&gt; <span class="number">14</span> first = Math.random();</span><br><span class="line">&gt; <span class="number">15</span> second = Math.random();</span><br><span class="line">&gt; <span class="number">16</span> <span class="keyword">if</span> (first == second)</span><br><span class="line">&gt; <span class="number">17</span> count ++;</span><br><span class="line">&gt; <span class="number">18</span> &#125;</span><br><span class="line">&gt; <span class="number">19</span> System.out.print(count);</span><br><span class="line">&gt; <span class="number">20</span> &#125;</span><br><span class="line">&gt; <span class="number">21</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="4-测试运行："><a href="#4-测试运行：" class="headerlink" title="4. 测试运行："></a>4. 测试运行：</h3><hr><p><img src="https://img-blog.csdnimg.cn/20190913202609169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ZpY3RvcnlLaW5nTElV,size_16,color_FFFFFF,t_70" alt="测试01"></p><p><img src="https://img-blog.csdnimg.cn/20190913202744331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ZpY3RvcnlLaW5nTElV,size_16,color_FFFFFF,t_70" alt="测试02"></p><h3 id="5-代码解释"><a href="#5-代码解释" class="headerlink" title="5. 代码解释"></a>5. 代码解释</h3><p>第一个操作数的选择<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一个操作数的选择</span></span><br><span class="line"> <span class="number">2</span>             <span class="keyword">int</span> a=(<span class="keyword">int</span>)(Math.random()*tf+<span class="number">1</span>);</span><br><span class="line"> <span class="number">3</span>             </span><br><span class="line"> <span class="number">4</span>             <span class="keyword">if</span>(zf==<span class="number">1</span>) &#123;<span class="comment">//有负数</span></span><br><span class="line"> <span class="number">5</span>             <span class="keyword">int</span> p=(<span class="keyword">int</span>) (Math.random()*<span class="number">2</span>);</span><br><span class="line"> <span class="number">6</span>                 <span class="keyword">switch</span>(p) &#123;</span><br><span class="line"> <span class="number">7</span>                 <span class="keyword">case</span> <span class="number">0</span>:a=a*(-<span class="number">1</span>);<span class="comment">//取负数</span></span><br><span class="line"> <span class="number">8</span>                        System.out.print(a);<span class="keyword">break</span>;</span><br><span class="line"> <span class="number">9</span>                 <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="number">10</span>                           System.out.print(a);<span class="keyword">break</span>;</span><br><span class="line"><span class="number">11</span>                 &#125;</span><br><span class="line"><span class="number">12</span>             &#125;</span><br><span class="line"><span class="number">13</span>             <span class="keyword">if</span>(zf==<span class="number">0</span>) &#123;<span class="comment">//没有负数</span></span><br><span class="line"><span class="number">14</span>                     System.out.print(a);</span><br><span class="line"><span class="number">15</span>                     &#125;</span><br></pre></td></tr></table></figure></p><p>运算符号的选择<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="number">1</span> System.out.println(<span class="string">"请选择是否包含*或者/：2:否 4:是 "</span>);</span><br><span class="line"> <span class="number">2</span>         <span class="keyword">int</span> fu=t.nextInt();</span><br><span class="line"> <span class="number">3</span> <span class="keyword">if</span>(fu==<span class="number">2</span>) &#123;<span class="comment">//选择两个字符‘+’‘-’</span></span><br><span class="line"> <span class="number">4</span>                 <span class="keyword">int</span> k=(<span class="keyword">int</span>)(Math.random()*<span class="number">2</span>);</span><br><span class="line"> <span class="number">5</span>                 <span class="keyword">switch</span>(k) &#123;<span class="comment">//随机选择运算符</span></span><br><span class="line"> <span class="number">6</span>                 <span class="keyword">case</span> <span class="number">0</span>:System.out.print(<span class="string">"+"</span>);</span><br><span class="line"> <span class="number">7</span>                        <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">8</span>                 <span class="keyword">case</span> <span class="number">1</span>:System.out.print(<span class="string">"-"</span>);</span><br><span class="line"> <span class="number">9</span>                        <span class="keyword">break</span>; </span><br><span class="line"><span class="number">10</span>                                                &#125;</span><br><span class="line"><span class="number">11</span> <span class="keyword">if</span>(fu==<span class="number">4</span>) &#123;<span class="comment">//四个字符的‘+’‘-’‘*’‘/’</span></span><br><span class="line"><span class="number">12</span>             <span class="keyword">int</span> k=(<span class="keyword">int</span>)(Math.random()*<span class="number">4</span>+<span class="number">1</span>);</span><br><span class="line"><span class="number">13</span>             <span class="keyword">switch</span>(k) &#123;<span class="comment">//随机选择运算符</span></span><br><span class="line"><span class="number">14</span>             <span class="keyword">case</span> <span class="number">1</span>:System.out.print(<span class="string">"+"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="number">15</span>             <span class="keyword">case</span> <span class="number">2</span>:System.out.print(<span class="string">"-"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="number">16</span>             <span class="keyword">case</span> <span class="number">3</span>:System.out.print(<span class="string">"*"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="number">17</span>             <span class="keyword">case</span> <span class="number">4</span>:System.out.print(<span class="string">"/"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="number">18</span>             &#125;</span><br></pre></td></tr></table></figure></p><p>　　等号右侧结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="number">1</span> <span class="comment">//等号</span></span><br><span class="line"> <span class="number">2</span>             </span><br><span class="line"> <span class="number">3</span>             System.out.print(<span class="string">"="</span>);</span><br><span class="line"> <span class="number">4</span>             <span class="comment">//运算结果</span></span><br><span class="line"> <span class="number">5</span>             <span class="keyword">if</span>(k==<span class="number">1</span>) &#123;</span><br><span class="line"> <span class="number">6</span>                 c=a+b;System.out.println(c);</span><br><span class="line"> <span class="number">7</span>             &#125;</span><br><span class="line"> <span class="number">8</span>             <span class="keyword">if</span>(k==<span class="number">2</span>) &#123;</span><br><span class="line"> <span class="number">9</span>                 c=a-b;System.out.println(c);</span><br><span class="line"><span class="number">10</span>             &#125;</span><br><span class="line"><span class="number">11</span>             <span class="keyword">if</span>(k==<span class="number">3</span>) &#123;</span><br><span class="line"><span class="number">12</span>                 c=a*b;System.out.println(c);</span><br><span class="line"><span class="number">13</span>             &#125;</span><br><span class="line"><span class="number">14</span>             <span class="keyword">if</span>(k==<span class="number">4</span>) &#123;</span><br><span class="line"><span class="number">15</span>                 c=a/b;System.out.println(c);</span><br><span class="line"><span class="number">16</span>             &#125;</span><br></pre></td></tr></table></figure><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><hr><p><img src="https://img-blog.csdnimg.cn/20190913202956382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ZpY3RvcnlLaW5nTElV,size_16,color_FFFFFF,t_70" alt="总结"></p><h3 id="7-psp"><a href="#7-psp" class="headerlink" title="7. psp"></a>7. psp</h3><hr><p><img src="https://img-blog.csdnimg.cn/20190913203103805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ZpY3RvcnlLaW5nTElV,size_16,color_FFFFFF,t_70" alt="psp"><br><strong>源码：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">text_005</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">PrintStream ps = <span class="keyword">new</span> PrintStream(<span class="string">"d:/result.txt"</span>);</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">Scanner t=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"请输入题目个数："</span>);</span><br><span class="line"><span class="keyword">int</span> tg=t.nextInt();</span><br><span class="line"><span class="comment">//控制题目个数</span></span><br><span class="line">System.out.print(<span class="string">"请输入操作数的范围（如 100，1000等）:"</span>);</span><br><span class="line"><span class="keyword">int</span> tf=t.nextInt();</span><br><span class="line"><span class="comment">//控制题目范围</span></span><br><span class="line">System.out.println(<span class="string">"请选择是否有负数：1:有  0:没有"</span>);</span><br><span class="line"><span class="keyword">int</span> zf=t.nextInt();</span><br><span class="line"><span class="comment">//控制正负数</span></span><br><span class="line">System.out.println(<span class="string">"请选择是否包含*或者/：2:否 4:是 "</span>);</span><br><span class="line"><span class="keyword">int</span> fu=t.nextInt();</span><br><span class="line"><span class="comment">//控制符号</span></span><br><span class="line">System.setOut(ps);</span><br><span class="line"><span class="comment">//添加打印学号</span></span><br><span class="line"><span class="comment">//for(int j=0;j&lt;2;j++) &#123;</span></span><br><span class="line"><span class="comment">//System.out.println(2019000+j);</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tg;i++) &#123;<span class="comment">//循环控制题目个数</span></span><br><span class="line"><span class="comment">//第一个操作数的选择</span></span><br><span class="line"><span class="keyword">int</span> a=(<span class="keyword">int</span>)(Math.random()*tf+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">1</span>) &#123;<span class="comment">//有负数</span></span><br><span class="line"><span class="keyword">int</span> p=(<span class="keyword">int</span>) (Math.random()*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">switch</span>(p) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:a=a*(-<span class="number">1</span>);<span class="comment">//取负数</span></span><br><span class="line">   System.out.print(a);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      System.out.print(a);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">0</span>) &#123;<span class="comment">//没有负数</span></span><br><span class="line">System.out.print(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fu==<span class="number">2</span>) &#123;<span class="comment">//选择两个字符‘+’‘-’</span></span><br><span class="line"><span class="keyword">int</span> k=(<span class="keyword">int</span>)(Math.random()*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">switch</span>(k) &#123;<span class="comment">//随机选择运算符</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:System.out.print(<span class="string">"+"</span>);</span><br><span class="line">   <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:System.out.print(<span class="string">"-"</span>);</span><br><span class="line">   <span class="keyword">break</span>; </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b=(<span class="keyword">int</span>)(Math.random()*tf+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">1</span>) &#123;<span class="comment">//有负数</span></span><br><span class="line"><span class="keyword">int</span> p=(<span class="keyword">int</span>) (Math.random()*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">switch</span>(p) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:b=b*(-<span class="number">1</span>);<span class="comment">//取负数</span></span><br><span class="line">   System.out.print(b);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      System.out.print(b);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">0</span>) &#123;<span class="comment">//没有负数</span></span><br><span class="line">System.out.print(b);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"="</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//运算结果</span></span><br><span class="line"><span class="comment">if(k==0) &#123;c=a+b;System.out.println(c);&#125;</span></span><br><span class="line"><span class="comment">if(k==1)&#123;c=a-b;System.out.println(c);&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fu==<span class="number">4</span>) &#123;<span class="comment">//四个字符的‘+’‘-’‘*’‘/’</span></span><br><span class="line"><span class="keyword">int</span> k=(<span class="keyword">int</span>)(Math.random()*<span class="number">4</span>+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">switch</span>(k) &#123;<span class="comment">//随机选择运算符</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:System.out.print(<span class="string">"+"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:System.out.print(<span class="string">"-"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:System.out.print(<span class="string">"*"</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:System.out.print(<span class="string">"/"</span>);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二个操作数的选择</span></span><br><span class="line"><span class="keyword">int</span> b=(<span class="keyword">int</span>) (Math.random()*tf+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">1</span>) &#123;<span class="comment">//有负数</span></span><br><span class="line"><span class="keyword">int</span> p=(<span class="keyword">int</span>) (Math.random()*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">switch</span>(p) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:b=b*(-<span class="number">1</span>);<span class="comment">//取负数   </span></span><br><span class="line">   System.out.print(b);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      System.out.print(b);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(zf==<span class="number">0</span>) &#123;<span class="comment">//没有负数</span></span><br><span class="line">System.out.print(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//等号</span></span><br><span class="line">System.out.println(<span class="string">"="</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//运算结果</span></span><br><span class="line"><span class="comment">if(k==1) &#123;</span></span><br><span class="line"><span class="comment">c=a+b;System.out.println(c);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(k==2) &#123;</span></span><br><span class="line"><span class="comment">c=a-b;System.out.println(c);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(k==3) &#123;</span></span><br><span class="line"><span class="comment">c=a*b;System.out.println(c);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if(k==4) &#123;</span></span><br><span class="line"><span class="comment">c=a/b;System.out.println(c);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//学号那个循环的截止&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-需求分析：&quot;&gt;&lt;a href=&quot;#1-需求分析：&quot; class=&quot;headerlink&quot; title=&quot;1.需求分析：&quot;&gt;&lt;/a&gt;1.需求分析：&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;为了对学生的算数进行锻炼，家长每天给孩子出题成为一个难题，需要做出一个程序，每天生成一定数
      
    
    </summary>
    
    
      <category term="-java算法 -四则运算" scheme="https://augus-liuzhi.github.io/tags/java%E7%AE%97%E6%B3%95-%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>2019软件工程第一次作业</title>
    <link href="https://augus-liuzhi.github.io/2019/09/20/markdown-1/"/>
    <id>https://augus-liuzhi.github.io/2019/09/20/markdown-1/</id>
    <published>2019-09-20T15:01:42.683Z</published>
    <updated>2019-09-22T05:09:24.646Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.shields.io/badge/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-red" alt="构建之法"></p><h2 id="1-计算机专业术语及名词解释"><a href="#1-计算机专业术语及名词解释" class="headerlink" title="1.计算机专业术语及名词解释"></a>1.计算机专业术语及名词解释</h2><ul><li>软件=程序+软件工程</li><li>程序=数据结构+算法</li><li>程序：源程序，一行行代码</li><li><p>软件构建</p><p>  <code>1. cc和link命令</code><br>  <code>2. 软件架构：一系列抽象模式，指导大型软件各个方面的设计</code><br>  <code>3. 软件设计与实现</code><br>  <code>4. 各种文件和数据之间描述文件依赖，编译，链接</code></p></li></ul><ul><li><p>软件质量 </p><p>  <code>1. 源代码管理（配置管理）：配置运行的操作系统及程序版本等</code><br>  <code>2. 质量保证：保证高质量软件、流程进行开发</code><br>  <code>3. 软件测试：验证的过程</code></p></li><li><p>软件开发</p><p>  <code>1. 需求分析：对用户的需求【靠谱、可实现】</code><br>  <code>2. 设计：软件架构</code><br>  <code>3. 实现：写数据和算法</code><br>  <code>4. 测试：软件测试</code><br>  <code>5. 发布: 发布软件</code></p></li></ul><ul><li><p>软件生命周期</p><p>  <code>1. 程序理解：懂已有程序，了解程序设计</code><br>  <code>2. 软件维护（服务运营）：打补丁，维护服务，修复问题</code><br>  <code>3. 软件项目管理：生命周期负责人</code></p></li><li>用户体验：使用者的体验</li><li>国际化和本地化：处理不同语言，不同地区用户对界面和功能的需求</li><li>商业模式</li><li>职业道德规范</li><li>软件企业=软件+商业模式</li><li><p>程序开发的不同阶段</p><p>  <code>1. 写程序练习数据结构由与算法</code><br>  <code>2. 用JAVAScript ASP.NET Ruby写写网站</code><br>  <code>3. 钻研新技术，应用新技术在软件行业创新</code><br>  <code>4. 银行软件系统，互联网搜索行业，电子商务系，windows操作系统</code></p></li></ul><ul><li><p>软件开发特性（难题）</p><p>  <code>1. 复杂性</code><br>  <code>2. 不可见行性</code><br>  <code>3. 易变形</code><br>  <code>4. 服从性</code><br>  <code>5. 非连续性</code></p></li></ul><p>​    </p><ul><li><p>计算机科学偏理论领域</p><p>  <code>1. 计算理论</code><br>  <code>2. 信息和编码理论</code><br>  <code>3. 算法和数据结构</code><br>  <code>4. 形式化方法</code><br>  <code>5. 程序设计语言</code></p></li><li><p>计算机科学偏实践领域</p><p>  <code>1. 计算机体系结构</code><br>  <code>2. 并行计算和分布式系统</code><br>  <code>3. 实时系统和嵌入式系统</code><br>  <code>4. 操作系统</code><br>  <code>5. 计算机网路</code><br>  <code>6. 科学计算机</code><br>  <code>7. 安全和密码学</code><br>  <code>8. 人工智能</code><br>  <code>9. 计算机图形学</code><br>  <code>10. 数据库和大规模数据处理</code><br>  <code>11. 万维网</code><br>  <code>12. 自然语言处理和语音</code><br>  <code>13. 人机交互</code><br>  <code>14. 软件工程</code></p></li></ul><ul><li>生命周期（软件需求、软件设计、软件构建、软件测试、软件维护）</li><li>专门领域 （软件配置管理、软件工程管理、软件工程过程、软件工程模型和方法、软件质量）</li><li>理论基础（计算基础、数学基础、工程基础）</li><li>软件缺陷 bug</li><li><p>足够好的软件</p><p>  <code>1. 用户满意度</code><br>  <code>2. 可靠性</code><br>  <code>3. 软件流程的质量</code><br>  <code>4. 可维护性</code></p></li></ul><h2 id="2-构建之法五个问题"><a href="#2-构建之法五个问题" class="headerlink" title="2.构建之法五个问题"></a>2.构建之法五个问题</h2><ul><li><code>1 p15</code> ，足够好的软件中，如果一个项目在规定时间之内，无法完成或者bug很多，应该怎么解决，谁来承担后果，会有怎样的后果？</li><li><code>2 P42</code>， 对于个人能力的衡量和发展，企业如何衡量一个人的能力，个人发展又怎样的晋升制度？<br>*<code>3 P130</code> 关于成员授权和信任问题。如果有能力干活的人中途离开了或者在开发过程中这个人遇到技术难题，长时间未解决，其他成员对这个人产生能力质疑时，如何解决这个问题？由谁来主导这个问题的解决？</li><li><code>4 P136</code>， 对于投资质量这一节中，如何保证企业所投资的这个软件是一个好软件【盈利的软件】，从用户需求者角度想，另外还有其他的哪些方面？</li><li><p><code>5 P184</code> ，关于竞争对手的产品，如何使我们制作的软件产品，比竞争对手的产品更好的发展？如何让更多的用户选择我们的产品？如何让我们的产品更有竞争力</p><h2 id="3-软件分类及特点"><a href="#3-软件分类及特点" class="headerlink" title="3.软件分类及特点"></a>3.软件分类及特点</h2></li><li><p><code>Games</code>： 王者荣耀、和平精英</p></li><li><code>Shopping</code>：淘宝、京东、拼多多、1688、咸鱼</li><li><code>Pay</code>:支付宝、云闪付、微信、京东金融</li><li><code>Learning</code>：慕课网、墨墨背单词、可可英语、网易公开课、中国大学mooc</li><li><code>短视频</code>：抖音、西瓜视频、今日头条、飞猪</li><li><code>点餐</code>：美团、美团外卖、饿了么、口碑、KFC</li></ul><p>特点：</p><p><code>1. 像饿了么，美团新用户立减15或者20，可以几分钱吃一顿饭所以下载了，都是盈利软件，对商家进行抽成，不仅赚取用户现金，和其他企业进行广告推广盈利等。</code><br><code>2. 通过应用商店进行下载，当时大一，使用起来感觉非常符合我们</code><br><code>3. 去年因为服务器bug,饿了么对于当时那个时段无法登陆的用户进行了10元无门槛对用户补偿，强制更新，没有取消键，进入页面，只有更新页面。</code><br><code>4. 竞争通过对用户的新注册账号的福利，普通用户还有会员进行推广。</code></p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-red&quot; alt=&quot;构建之法&quot;&gt;&lt;/p&gt;
&lt;h2
      
    
    </summary>
    
    
      <category term="-构建之法" scheme="https://augus-liuzhi.github.io/tags/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>如何用Markdown写flow流程图</title>
    <link href="https://augus-liuzhi.github.io/2019/09/20/markdown-3/"/>
    <id>https://augus-liuzhi.github.io/2019/09/20/markdown-3/</id>
    <published>2019-09-20T15:01:42.597Z</published>
    <updated>2019-09-22T05:13:14.799Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.shields.io/badge/markdown-%E6%B5%81%E7%A8%8B%E5%9B%BE-orange" alt="markdown"></p><h2 id="Flow流程图"><a href="#Flow流程图" class="headerlink" title="Flow流程图"></a>Flow流程图</h2><p><strong>工具：Typora</strong></p><h4 id="1-流程图各个框框代表的含义"><a href="#1-流程图各个框框代表的含义" class="headerlink" title="1. 流程图各个框框代表的含义"></a>1. 流程图各个框框代表的含义</h4><h6 id="1-1-开始和结束"><a href="#1-1-开始和结束" class="headerlink" title="1.1 开始和结束"></a>1.1 开始和结束</h6><div id="flowchart-0" class="flow-chart"></div><h6 id="1-2-输入输出"><a href="#1-2-输入输出" class="headerlink" title="1.2 输入输出"></a>1.2 输入输出</h6><div id="flowchart-1" class="flow-chart"></div><h6 id="1-3-判断和处理"><a href="#1-3-判断和处理" class="headerlink" title="1.3 判断和处理"></a>1.3 判断和处理</h6><div id="flowchart-2" class="flow-chart"></div><h4 id="2-模块关键字"><a href="#2-模块关键字" class="headerlink" title="2. 模块关键字"></a>2. 模块关键字</h4><hr><ul><li><p><code>start</code>     程序开始</p></li><li><p><code>end</code>    程序结束</p></li><li><p><code>opreation</code>      程序处理块</p></li><li><p><code>subroutine</code>     子程序块</p></li><li><p><code>condition</code>     条件判断</p></li><li><p><code>inputoutput</code>    表示程序的输入输出</p></li><li><p><code>right 、left</code>     表示箭头在当前模块的起点（默认向下,多默认和右）</p></li><li><p><code>yes 、no</code>      表示condition判断分支</p></li></ul><h4 id="3-模块用法"><a href="#3-模块用法" class="headerlink" title="3. 模块用法"></a>3. 模块用法</h4><hr><blockquote><p>模块标识=&gt;模块关键字：内容</p></blockquote><p>模块标识任意起名，最好知名解意，起一个标识的作用</p><p>内容就是框框里的文字</p><p>注意：模块关键字和内容之间有一个冒号，并且要在冒号后，必须要有一个空格</p><h4 id="4-模块连接方法"><a href="#4-模块连接方法" class="headerlink" title="4. 模块连接方法"></a>4. 模块连接方法</h4><hr><blockquote><p>用-&gt;来连接,符号两侧不用空格</p></blockquote><h4 id="5-应用实例"><a href="#5-应用实例" class="headerlink" title="5. 应用实例"></a>5. 应用实例</h4><hr><h6 id="5-1-开始和结束模块"><a href="#5-1-开始和结束模块" class="headerlink" title="5.1 开始和结束模块"></a>5.1 开始和结束模块</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">代码：</span><br><span class="line">flowchat</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">st-&gt;e</span><br></pre></td></tr></table></figure><div id="flowchart-3" class="flow-chart"></div><h6 id="5-2-开始和程序处理块（下）"><a href="#5-2-开始和程序处理块（下）" class="headerlink" title="5.2 开始和程序处理块（下）"></a>5.2 开始和程序处理块（下）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">start=&gt;start: 开始</span><br><span class="line">operation=&gt;operation: int i=1</span><br><span class="line">start-&gt;operation</span><br></pre></td></tr></table></figure><div id="flowchart-4" class="flow-chart"></div><h6 id="5-3-开始和程序处理块（右）"><a href="#5-3-开始和程序处理块（右）" class="headerlink" title="5.3 开始和程序处理块（右）"></a>5.3 开始和程序处理块（右）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">start=&gt;start: 开始</span><br><span class="line">operation=&gt;operation: int i=1</span><br><span class="line">start(right)-&gt;operation</span><br></pre></td></tr></table></figure><div id="flowchart-5" class="flow-chart"></div><h6 id="5-4-操作和判断"><a href="#5-4-操作和判断" class="headerlink" title="5.4 操作和判断"></a>5.4 操作和判断</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">con=&gt;condition: for(int i=1;i&lt;n;i++)</span><br><span class="line">op1=&gt;operation: int n=10;</span><br><span class="line">op2=&gt;operation: a++;</span><br><span class="line">op3=&gt;operation: a--;</span><br><span class="line">op1-&gt;con</span><br><span class="line">con(yes)-&gt;op2</span><br><span class="line">con(no)-&gt;op3</span><br></pre></td></tr></table></figure><div id="flowchart-6" class="flow-chart"></div><h6 id="5-5-完整流程1"><a href="#5-5-完整流程1" class="headerlink" title="5.5 完整流程1"></a>5.5 完整流程1</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 操作</span><br><span class="line">sub=&gt;subroutine: 子程序</span><br><span class="line">cond=&gt;condition: 判断</span><br><span class="line">io=&gt;inputoutput: 输出</span><br><span class="line">st(right)-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(right)-&gt;e</span><br><span class="line">cond(no)-&gt;sub(right)-&gt;op</span><br></pre></td></tr></table></figure><div id="flowchart-7" class="flow-chart"></div><h6 id="5-6-完整流程2"><a href="#5-6-完整流程2" class="headerlink" title="5.6 完整流程2"></a>5.6 完整流程2</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;end: 操作</span><br><span class="line">cond=&gt;condition: 判断</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><div id="flowchart-8" class="flow-chart"></div><blockquote><p>注意：如果使用Typora,选中代码，然后再选择语言哪里，直接输入flow即可，如果用其他编辑器，应当输入相应的语法<code></code>flow` ,如csdn。博客园的markdown<strong>不支持、不支持、不支持</strong>流程图。<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始e=>end: 结束st->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">in01=>inputoutput: 输入out01=>inputoutput: 输出in01(right)->out01</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script><textarea id="flowchart-2-code" style="display: none">con02=>condition: 判断op02=>operation: 操作op02->con02</textarea><textarea id="flowchart-2-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-2-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-2-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-2", options);</script><textarea id="flowchart-3-code" style="display: none">st=>start: 开始e=>end: 结束st->e</textarea><textarea id="flowchart-3-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-3-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-3-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-3", options);</script><textarea id="flowchart-4-code" style="display: none">start=>start: 开始operation=>operation: int i=1start->operation</textarea><textarea id="flowchart-4-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-4-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-4-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-4", options);</script><textarea id="flowchart-5-code" style="display: none">start=>start: 开始operation=>operation: int i=1start(right)->operation</textarea><textarea id="flowchart-5-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-5-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-5-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-5", options);</script><textarea id="flowchart-6-code" style="display: none">con=>condition: for(int i=1;i<n;i++) op1>operation: int n=10;op2=>operation: a++;op3=>operation: a--;op1->concon(yes)->op2con(no)->op3</n;i++)></textarea><textarea id="flowchart-6-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-6-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-6-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-6", options);</script><textarea id="flowchart-7-code" style="display: none">st=>start: 开始e=>end: 结束op=>operation: 操作sub=>subroutine: 子程序cond=>condition: 判断io=>inputoutput: 输出st(right)->op->condcond(yes)->io(right)->econd(no)->sub(right)->op</textarea><textarea id="flowchart-7-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-7-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-7-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-7", options);</script><textarea id="flowchart-8-code" style="display: none">st=>start: 开始e=>end: 结束op=>end: 操作cond=>condition: 判断st->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-8-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-8-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-8-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-8", options);</script></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/markdown-%E6%B5%81%E7%A8%8B%E5%9B%BE-orange&quot; alt=&quot;markdown&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Flow流程图&quot;&gt;&lt;a href=&quot;#Flow流程
      
    
    </summary>
    
    
      <category term="-markdown -流程图" scheme="https://augus-liuzhi.github.io/tags/markdown-%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
  </entry>
  
</feed>
